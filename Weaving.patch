Subject: [PATCH] Weaving Patch file III
---
Index: XIVSlothCombo/XIVSlothCombo.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/XIVSlothCombo/XIVSlothCombo.cs b/XIVSlothCombo/XIVSlothCombo.cs
--- a/XIVSlothCombo/XIVSlothCombo.cs	(revision 9ab73d98030edacfb5da7b43439f71595f8722aa)
+++ b/XIVSlothCombo/XIVSlothCombo.cs	(date 1729053457847)
@@ -16,6 +16,7 @@
 using System.Net.Http;
 using System.Reflection;
 using System.Threading.Tasks;
+using ECommons.ChatMethods;
 using XIVSlothCombo.Attributes;
 using XIVSlothCombo.Combos;
 using XIVSlothCombo.Combos.PvE;
@@ -83,11 +84,30 @@
                     Combos.JobHelpers.AST.AST_QuickTargetCards.SelectedRandomMember = null;
                     Svc.Log.Debug($"Switched to job {value}");
                     PvEFeatures.HasToOpenJob = true;
+                    weaveID.Clear();
                 }
                 jobID = value;
             }
         }
 
+        private static readonly List<uint> weaveID = [];
+
+        public static uint? WeaveID
+        {
+            get => weaveID.Count == 0 ? null : weaveID.LastOrDefault();
+            set
+            {
+                if (value == null) return;
+                weaveID.Toggle((uint)value);
+                Svc.Chat.Print(new SeStringBuilder()
+                    .AddUiForeground(
+                        weaveID.Contains((uint)value) ? "Queue" : "Remove",
+                        weaveID.Contains((uint)value) ? (ushort)UIColor.Green : (ushort)UIColor.Red)
+                    .Append($" {ActionWatching.GetActionName((uint)value)}")
+                    .Build());
+            }
+        }
+
         /// <summary> Initializes a new instance of the <see cref="XIVSlothCombo"/> class. </summary>
         /// <param name="pluginInterface"> Dalamud plugin interface. </param>
         public XIVSlothCombo(IDalamudPluginInterface pluginInterface)
@@ -600,6 +620,17 @@
                             break;
                         }
                     }
+                    
+                case "weave":
+                {
+                    if (uint.TryParse(argumentsParts[1], out var actionID))
+                    {
+                        WeaveID = actionID;
+                    }
+
+                    break;
+                }
+                
                 default:
                     ConfigWindow.IsOpen = !ConfigWindow.IsOpen;
                     PvEFeatures.HasToOpenJob = true;
Index: XIVSlothCombo/CustomCombo/CustomCombo.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/XIVSlothCombo/CustomCombo/CustomCombo.cs b/XIVSlothCombo/CustomCombo/CustomCombo.cs
--- a/XIVSlothCombo/CustomCombo/CustomCombo.cs	(revision 9ab73d98030edacfb5da7b43439f71595f8722aa)
+++ b/XIVSlothCombo/CustomCombo/CustomCombo.cs	(date 1729053411499)
@@ -61,7 +61,22 @@
                 JobID != classJobID && ClassID != classJobID)
                 return false;
 
-            uint resultingActionID = Invoke(actionID, lastComboMove, comboTime, level);
+            uint resultingActionID = 0;
+            if ((CanWeave(actionID) || !HasTarget()) && WeaveID != null)
+            {
+                if (JustUsed(WeaveID.Value) || !HasCharges(WeaveID.Value))
+                {
+                    WeaveID = WeaveID;
+                }
+                else
+                {
+                    resultingActionID = WeaveID.Value;
+                }
+            }
+            else
+            {
+                resultingActionID = Invoke(actionID, lastComboMove, comboTime, level);
+            }
             //Dalamud.Logging.PluginLog.Debug(resultingActionID.ToString());
 
             if (resultingActionID == 0 || actionID == resultingActionID)
